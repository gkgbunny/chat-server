{"ast":null,"code":"import _defineProperty from \"/home/trainode26/Projects/chat-server/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/trainode26/Projects/chat-server/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/trainode26/Projects/chat-server/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/trainode26/Projects/chat-server/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/trainode26/Projects/chat-server/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/trainode26/Projects/chat-server/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/trainode26/Projects/chat-server/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/trainode26/Projects/chat-server/src/pages/components/ChatDialog.jsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SendMessage($text: String!, $sender: ID!, $receiver: ID!) {\\n    sendMessage(text: $text, sender: $sender, receiver: $receiver) {\\n      id\\n      text\\n      sender\\n      receiver\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    getAllUser {\\n      id\\n      name\\n      email\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport gql from \"graphql-tag\";\nimport { Query, Mutation } from \"react-apollo\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\n\nvar styles = function styles(theme) {\n  return {\n    root: {// width: \"100%\"\n    },\n    content: {\n      position: 'sticky',\n      marginBottom: theme.spacing.unit\n    },\n    footer: {\n      display: \"flex\",\n      position: 'sticky',\n      marginBottom: theme.spacing.unit,\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit\n    },\n    textField: {\n      marginRight: theme.spacing.unit,\n      position: 'relative'\n    },\n    flex: {\n      flex: 1,\n      marginLeft: theme.spacing.unit\n    },\n    // dialogPaper: {\n    //   // minHeight: '55vh',\n    //   // maxHeight: '55vh',\n    //   // minWidth: '40.3vh',\n    //   // maxWidth: '40.3vh',\n    // },\n    chip: {// width: \"50%\",\n      // flexShrink: 1,\n      // wordWrap: \"break-word\",\n    },\n    chipLabel: {\n      width: \"100%\",\n      wordWrap: \"break-word\"\n    },\n    chipLeft: {\n      // flexShrink: 1,\n      // width: \"50%\",\n      textAlign: \"left\",\n      margin: theme.spacing.unit\n    },\n    chipRight: {\n      // flexShrink: 1,\n      // width: \"100%\",\n      textAlign: \"right\",\n      margin: theme.spacing.unit\n    }\n  };\n};\n\nvar GET_USERS = gql(_templateObject());\nvar SEND_MESSAGE = gql(_templateObject2());\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }));\n}\n\nvar ChatDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChatDialog, _Component);\n\n  function ChatDialog(props) {\n    var _this;\n\n    _classCallCheck(this, ChatDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatDialog).call(this, props));\n\n    _this.scrollToBottom = function () {\n      var node = ReactDOM.findDOMNode(_this.messagesEnd); // const node = document.getElementById(\"alert-dialog-description\");\n\n      if (node) {\n        node.scrollIntoView({\n          behavior: \"smooth\"\n        });\n      }\n    };\n\n    _this.handleChange = function (field) {\n      return function (event) {\n        _this.setState(_defineProperty({}, field, event.target.value));\n      };\n    };\n\n    _this.onPressKey = function (e, sendMessage) {\n      var x = e.key;\n\n      if (x === \"Enter\") {\n        _this.handleSend(sendMessage);\n      }\n    };\n\n    _this.handleSend = function (sendMessage) {\n      var selectData = _this.props.selectData;\n      var message = _this.state.message;\n      var senderID = JSON.parse(localStorage.getItem(\"loginUser\"))[0];\n      sendMessage({\n        variables: {\n          text: message,\n          sender: senderID,\n          receiver: selectData.id\n        }\n      });\n\n      _this.setState({\n        message: ''\n      });\n    };\n\n    _this.state = {\n      message: ''\n    };\n    return _this;\n  }\n\n  _createClass(ChatDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.subscribeToMore();\n      this.scrollToBottom();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.scrollToBottom();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          open = _this$props.open,\n          onClose = _this$props.onClose,\n          selectData = _this$props.selectData,\n          classes = _this$props.classes,\n          messageData = _this$props.messageData;\n      var senderName = JSON.parse(localStorage.getItem(\"loginUser\"))[1];\n      var senderId = JSON.parse(localStorage.getItem(\"loginUser\"))[0];\n      return React.createElement(Query, {\n        query: GET_USERS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, function (_ref) {\n        var loading = _ref.loading,\n            error = _ref.error,\n            data = _ref.data;\n        if (loading) return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, \"Loading...\");\n        if (error) return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, error.message);\n        return React.createElement(React.Fragment, null, React.createElement(Dialog, {\n          id: \"lastMessage\",\n          fullScreen: true,\n          open: open,\n          onClose: onClose,\n          TransitionComponent: Transition,\n          className: classes.root,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(AppBar, {\n          className: classes.content,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(Toolbar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          color: \"inherit\",\n          onClick: onClose,\n          \"aria-label\": \"Close\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(ArrowBackIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        })), React.createElement(Typography, {\n          align: \"center\",\n          variant: \"h6\",\n          color: \"inherit\",\n          className: classes.flex,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, selectData.name))), React.createElement(DialogContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, React.createElement(DialogContentText, {\n          id: \"alert-dialog-description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, messageData.getMessage.map(function (message) {\n          var receiverData;\n\n          if (message.sender === senderId) {\n            return React.createElement(\"div\", {\n              className: classes.chipRight,\n              ref: function ref(div) {\n                return _this2.messagesEnd = div;\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 191\n              },\n              __self: this\n            }, React.createElement(Chip, {\n              avatar: React.createElement(Avatar, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 193\n                },\n                __self: this\n              }, senderName.toUpperCase()[0] + senderName.toUpperCase()[senderName.length - 1]),\n              label: React.createElement(\"div\", {\n                className: classes.chipLabel,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 194\n                },\n                __self: this\n              }, message.text),\n              color: \"primary\",\n              variant: \"outlined\",\n              className: classes.chip,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 192\n              },\n              __self: this\n            }));\n          } else {\n            receiverData = data.getAllUser.filter(function (data) {\n              return data.id === message.sender;\n            });\n          }\n\n          return React.createElement(\"div\", {\n            className: classes.chipLeft,\n            ref: function ref(div) {\n              return _this2.messagesEnd = div;\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          }, React.createElement(Chip, {\n            avatar: React.createElement(Avatar, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 207\n              },\n              __self: this\n            }, receiverData[0].name.toUpperCase()[0] + receiverData[0].name.toUpperCase()[receiverData[0].name.length - 1]),\n            label: React.createElement(\"div\", {\n              className: classes.chipLabel,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 208\n              },\n              __self: this\n            }, message.text),\n            color: \"primary\",\n            variant: \"outlined\",\n            className: classes.chip,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206\n            },\n            __self: this\n          }));\n        }), _this2.scrollToBottom())), React.createElement(Typography, {\n          className: classes.footer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(Mutation, {\n          mutation: SEND_MESSAGE,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, function (sendMessage, _ref2) {\n          var data = _ref2.data;\n          return React.createElement(React.Fragment, null, React.createElement(TextField, {\n            fullWidth: true,\n            id: \"filled-full-width\",\n            placeholder: \"Type Message\",\n            value: _this2.state.message,\n            name: \"message\",\n            className: classes.textField,\n            variant: \"filled\",\n            onChange: _this2.handleChange('message'),\n            onKeyPress: function onKeyPress(e) {\n              return _this2.onPressKey(e, sendMessage);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224\n            },\n            __self: this\n          }), React.createElement(Fab, {\n            onClick: function onClick() {\n              return _this2.handleSend(sendMessage);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235\n            },\n            __self: this\n          }, React.createElement(SendIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 238\n            },\n            __self: this\n          })));\n        }))));\n      });\n    }\n  }]);\n\n  return ChatDialog;\n}(Component);\n\nChatDialog.propTypes = {\n  classes: PropTypes.objectOf.isRequired,\n  onClose: PropTypes.func,\n  messageData: PropTypes.objectOf.isRequired,\n  open: PropTypes.bool,\n  subscribeToMore: PropTypes.func.isRequired,\n  selectData: PropTypes.objectOf.isRequired\n};\nChatDialog.defaultProps = {\n  onClose: function onClose() {},\n  open: 'false'\n};\nexport default withStyles(styles)(ChatDialog);","map":{"version":3,"sources":["/home/trainode26/Projects/chat-server/src/pages/components/ChatDialog.jsx"],"names":["React","Component","ReactDOM","PropTypes","gql","Query","Mutation","Dialog","DialogContent","DialogContentText","TextField","withStyles","SendIcon","ArrowBackIcon","AppBar","Toolbar","IconButton","Fab","Chip","Avatar","Typography","Slide","styles","theme","root","content","position","marginBottom","spacing","unit","footer","display","marginLeft","marginRight","textField","flex","chip","chipLabel","width","wordWrap","chipLeft","textAlign","margin","chipRight","GET_USERS","SEND_MESSAGE","Transition","props","ChatDialog","scrollToBottom","node","findDOMNode","messagesEnd","scrollIntoView","behavior","handleChange","field","event","setState","target","value","onPressKey","e","sendMessage","x","key","handleSend","selectData","message","state","senderID","JSON","parse","localStorage","getItem","variables","text","sender","receiver","id","subscribeToMore","open","onClose","classes","messageData","senderName","senderId","loading","error","data","name","getMessage","map","receiverData","div","toUpperCase","length","getAllUser","filter","propTypes","objectOf","isRequired","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport gql from \"graphql-tag\";\nimport { Query, Mutation } from \"react-apollo\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\n\nconst styles = theme => ({\n  root: {\n    // width: \"100%\"\n  },\n  content: {\n    position: 'sticky',\n    marginBottom: theme.spacing.unit,\n  },\n  footer: {\n    display: \"flex\",\n    position: 'sticky',\n    marginBottom: theme.spacing.unit,\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  textField: {\n    marginRight: theme.spacing.unit,\n    position: 'relative',\n  },\n  flex: {\n    flex: 1,\n    marginLeft: theme.spacing.unit,\n  },\n  // dialogPaper: {\n    //   // minHeight: '55vh',\n    //   // maxHeight: '55vh',\n    //   // minWidth: '40.3vh',\n    //   // maxWidth: '40.3vh',\n    // },\n  chip: {\n    // width: \"50%\",\n    // flexShrink: 1,\n    // wordWrap: \"break-word\",\n  },\n  chipLabel: {\n    width: \"100%\",\n    wordWrap: \"break-word\",\n  },\n  chipLeft: {\n    // flexShrink: 1,\n    // width: \"50%\",\n    textAlign: \"left\",\n    margin: theme.spacing.unit,\n  },\n  chipRight: {\n    // flexShrink: 1,\n    // width: \"100%\",\n    textAlign: \"right\",\n    margin: theme.spacing.unit,\n  }\n});\n\nconst GET_USERS = gql`\n  {\n    getAllUser {\n      id\n      name\n      email\n    }\n  }\n`;\n\nconst SEND_MESSAGE = gql`\n  mutation SendMessage($text: String!, $sender: ID!, $receiver: ID!) {\n    sendMessage(text: $text, sender: $sender, receiver: $receiver) {\n      id\n      text\n      sender\n      receiver\n    }\n  }\n`;\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass ChatDialog extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      message: '',\n    };\n  }\n\n  componentDidMount() {\n    this.props.subscribeToMore();\n    this.scrollToBottom();\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom = () => {\n    const node = ReactDOM.findDOMNode(this.messagesEnd);\n    // const node = document.getElementById(\"alert-dialog-description\");\n    if (node) {\n      node.scrollIntoView({ behavior: \"smooth\" });\n    }\n  }\n\n  handleChange = field => event => {\n    this.setState({\n      [field]: event.target.value,\n    });\n  };\n\n  onPressKey = (e, sendMessage) => {\n    const x = e.key;\n    if (x === \"Enter\") {\n      this.handleSend(sendMessage);\n    }\n  }\n\n  handleSend = (sendMessage) => {\n    const { selectData } = this.props;\n    const { message } = this.state;\n    const senderID = JSON.parse(localStorage.getItem(\"loginUser\"))[0];\n    sendMessage({ variables: { text: message, sender: senderID, receiver: selectData.id }})\n    this.setState({\n      message: ''\n    });\n  };\n\n  render() {\n    const {\n      open,\n      onClose,\n      selectData,\n      classes,\n      messageData,\n    } = this.props;\n    const senderName = JSON.parse(localStorage.getItem(\"loginUser\"))[1];\n    const senderId = JSON.parse(localStorage.getItem(\"loginUser\"))[0];\n    return (\n      <Query\n        query={GET_USERS}\n      >\n        {({ loading, error, data }) => {\n          if (loading) return <p>Loading...</p>;\n          if (error) return <p>{error.message}</p>;\n          return (\n            <>\n              <Dialog\n                id=\"lastMessage\"\n                fullScreen\n                open={open}\n                onClose={onClose}\n                TransitionComponent={Transition}\n                className={classes.root}\n              >\n                <AppBar className={classes.content}>\n                  <Toolbar>\n                    <IconButton color=\"inherit\" onClick={onClose} aria-label=\"Close\">\n                      <ArrowBackIcon />\n                    </IconButton>\n                    <Typography align=\"center\" variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                      {selectData.name}\n                    </Typography>\n                  </Toolbar>\n                </AppBar>\n                <DialogContent>\n                  <DialogContentText id=\"alert-dialog-description\">\n                    {\n                      messageData.getMessage.map(message => {\n                        let receiverData;\n                        if (message.sender === senderId) {\n                          return (\n                            <div className={classes.chipRight} ref={(div) => this.messagesEnd = div}>\n                              <Chip\n                                avatar={<Avatar>{senderName.toUpperCase()[0]+senderName.toUpperCase()[senderName.length-1]}</Avatar>}\n                                label={<div className={classes.chipLabel}>{message.text}</div>}\n                                color=\"primary\"\n                                variant=\"outlined\"\n                                className={classes.chip}\n                              />\n                            </div>\n                          )\n                        } else {\n                          receiverData = data.getAllUser.filter(data => data.id === message.sender);\n                        }\n                        return (\n                          <div className={classes.chipLeft} ref={(div) => this.messagesEnd = div}>\n                            <Chip\n                              avatar={<Avatar>{receiverData[0].name.toUpperCase()[0]+receiverData[0].name.toUpperCase()[receiverData[0].name.length-1]}</Avatar>}\n                              label={<div className={classes.chipLabel}>{message.text}</div>}\n                              color=\"primary\"\n                              variant=\"outlined\"\n                              className={classes.chip}\n                            />\n                          </div>\n                        )\n                      })\n                    }\n                    {this.scrollToBottom()}\n                  </DialogContentText>\n                </DialogContent>\n                <Typography className={classes.footer}>\n                  <Mutation mutation={SEND_MESSAGE}>\n                    {(sendMessage, { data }) => (\n                      <>\n                        <TextField\n                          fullWidth\n                          id=\"filled-full-width\"\n                          placeholder=\"Type Message\"\n                          value={this.state.message}\n                          name=\"message\"\n                          className={classes.textField}\n                          variant=\"filled\"\n                          onChange={this.handleChange('message')}\n                          onKeyPress={(e) => this.onPressKey(e, sendMessage)}\n                        />\n                        <Fab\n                          onClick={() => this.handleSend(sendMessage)}\n                        >\n                          <SendIcon />\n                        </Fab>\n                      </>\n                    )}\n                  </Mutation> \n                </Typography>\n              </Dialog>\n            </>\n          )\n        }}\n      </Query>\n    );\n  }\n}\nChatDialog.propTypes = {\n  classes: PropTypes.objectOf.isRequired,\n  onClose: PropTypes.func,\n  messageData: PropTypes.objectOf.isRequired,\n  open: PropTypes.bool,\n  subscribeToMore: PropTypes.func.isRequired,\n  selectData: PropTypes.objectOf.isRequired,\n};\nChatDialog.defaultProps = {\n  onClose: () => {},\n  open: 'false',\n};\nexport default withStyles(styles)(ChatDialog);"]},"metadata":{},"sourceType":"module"}