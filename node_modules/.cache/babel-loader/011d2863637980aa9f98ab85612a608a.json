{"ast":null,"code":"var _jsxFileName = \"/home/trainode26/Projects/chat-server/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloClient } from \"apollo-client\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { HttpLink } from 'apollo-link-http';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { split } from 'apollo-link';\nimport App from './App';\nvar wsLink = new WebSocketLink({\n  uri: \"ws://localhost:5000/graphql\",\n  options: {\n    reconnect: true\n  }\n});\nvar httpLink = new HttpLink({\n  uri: 'http://localhost:5000/graphql'\n});\nvar link = split(function (_ref) {\n  var query = _ref.query;\n\n  var _getMainDefinition = getMainDefinition(query),\n      kind = _getMainDefinition.kind,\n      operation = _getMainDefinition.operation;\n\n  return kind === 'OperationDefinition' && operation === 'subscription';\n}, wsLink, httpLink);\nvar client = new ApolloClient({\n  link: link,\n  cache: new InMemoryCache()\n});\nReactDOM.render(React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}))), document.getElementById('root'));","map":{"version":3,"sources":["/home/trainode26/Projects/chat-server/src/index.js"],"names":["React","ReactDOM","ApolloClient","ApolloProvider","InMemoryCache","WebSocketLink","HttpLink","getMainDefinition","split","App","wsLink","uri","options","reconnect","httpLink","link","query","kind","operation","client","cache","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,IAAMC,MAAM,GAAG,IAAIL,aAAJ,CAAkB;AAC/BM,EAAAA,GAAG,+BAD4B;AAE/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE;AADJ;AAFsB,CAAlB,CAAf;AAOA,IAAMC,QAAQ,GAAG,IAAIR,QAAJ,CAAa;AAC5BK,EAAAA,GAAG,EAAE;AADuB,CAAb,CAAjB;AAIA,IAAMI,IAAI,GAAGP,KAAK,CAChB,gBAAe;AAAA,MAAZQ,KAAY,QAAZA,KAAY;;AAAA,2BACeT,iBAAiB,CAACS,KAAD,CADhC;AAAA,MACLC,IADK,sBACLA,IADK;AAAA,MACCC,SADD,sBACCA,SADD;;AAEb,SAAOD,IAAI,KAAK,qBAAT,IAAkCC,SAAS,KAAK,cAAvD;AACD,CAJe,EAKhBR,MALgB,EAMhBI,QANgB,CAAlB;AASA,IAAMK,MAAM,GAAG,IAAIjB,YAAJ,CAAiB;AAC9Ba,EAAAA,IAAI,EAAJA,IAD8B;AAE9BK,EAAAA,KAAK,EAAE,IAAIhB,aAAJ;AAFuB,CAAjB,CAAf;AAMAH,QAAQ,CAACoB,MAAT,CACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEF,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAMEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloClient } from \"apollo-client\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { HttpLink } from 'apollo-link-http';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { split } from 'apollo-link';\nimport App from './App';\n\nconst wsLink = new WebSocketLink({\n  uri: `ws://localhost:5000/graphql`,\n  options: {\n    reconnect: true\n  }\n});\n\nconst httpLink = new HttpLink({ \n  uri: 'http://localhost:5000/graphql',\n})\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query);\n    return kind === 'OperationDefinition' && operation === 'subscription';\n  },\n  wsLink,\n  httpLink,\n);\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n});\n\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <div>\n      <App />\n    </div>\n  </ApolloProvider>,\n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}