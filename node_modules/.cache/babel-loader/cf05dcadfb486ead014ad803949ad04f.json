{"ast":null,"code":"import _classCallCheck from \"/home/trainode26/Projects/chat-server/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/trainode26/Projects/chat-server/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/trainode26/Projects/chat-server/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/trainode26/Projects/chat-server/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/trainode26/Projects/chat-server/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/trainode26/Projects/chat-server/src/pages/SnackBarProvider/SnackBarProvider.jsx\";\nimport React, { Component } from 'react';\nimport { Snackbar, IconButton, SnackbarContent } from '@material-ui/core/';\nimport { Close } from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport green from '@material-ui/core/colors/green';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CloseIcon from '@material-ui/icons/Close';\nvar SnackBarContext = React.createContext('Hello');\nvar variantIcon = {\n  success: CheckCircleIcon,\n  error: ErrorIcon\n};\n\nvar styles = function styles(theme) {\n  return {\n    success: {\n      backgroundColor: green[600]\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark\n    },\n    icon: {\n      fontSize: 20\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing.unit,\n      fontSize: 20\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'left'\n    }\n  };\n};\n\nvar SnackBarProvider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SnackBarProvider, _Component);\n\n  function SnackBarProvider(props) {\n    var _this;\n\n    _classCallCheck(this, SnackBarProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SnackBarProvider).call(this, props));\n\n    _this.openSnackBar = function (message, status) {\n      _this.setState({\n        message: message,\n        status: status,\n        isOpen: true\n      });\n    };\n\n    _this.closeSnackBar = function () {\n      _this.setState({\n        message: '',\n        status: '',\n        isOpen: false\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        isOpen: false\n      });\n    };\n\n    _this.snackBarContent = function (onClose, message, status) {\n      var classes = _this.props.classes;\n      var Icon = variantIcon[status];\n      return React.createElement(SnackbarContent, {\n        className: classes[status],\n        message: React.createElement(\"span\", {\n          className: classes.message,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          className: classes.iconVariant,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }), message),\n        action: [React.createElement(IconButton, {\n          color: \"inherit\",\n          onClick: onClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(CloseIcon, {\n          className: classes.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }))],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    };\n\n    _this.state = {\n      isOpen: false,\n      message: '',\n      status: ''\n    };\n    return _this;\n  }\n\n  _createClass(SnackBarProvider, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          classes = _this$props.classes;\n      var _this$state = this.state,\n          message = _this$state.message,\n          isOpen = _this$state.isOpen,\n          status = _this$state.status;\n      return React.createElement(React.Fragment, null, React.createElement(SnackBarContext.Provider, {\n        value: {\n          openSnackBar: this.openSnackBar,\n          closeSnackBar: this.closeSnackBar\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        open: isOpen,\n        autoHideDuration: 6000,\n        onClose: this.handleClose,\n        message: message,\n        action: [React.createElement(IconButton, {\n          key: \"close\",\n          color: \"inherit\",\n          className: classes.iconVariant,\n          onClick: this.closeSnackBar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(Close, {\n          className: classes.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }))],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.snackBarContent(this.handleClose, message, status)), children));\n    }\n  }]);\n\n  return SnackBarProvider;\n}(Component);\n\nSnackBarProvider.propTypes = {\n  children: PropTypes.objectOf,\n  classes: PropTypes.objectOf.isRequired\n};\nSnackBarProvider.defaultProps = {\n  children: {}\n};\nexport default withStyles(styles)(SnackBarProvider);\nexport var SnackBarContextConsumer = SnackBarContext.Consumer;","map":{"version":3,"sources":["/home/trainode26/Projects/chat-server/src/pages/SnackBarProvider/SnackBarProvider.jsx"],"names":["React","Component","Snackbar","IconButton","SnackbarContent","Close","withStyles","PropTypes","green","CheckCircleIcon","ErrorIcon","CloseIcon","SnackBarContext","createContext","variantIcon","success","error","styles","theme","backgroundColor","palette","dark","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","message","display","alignItems","SnackBarProvider","props","openSnackBar","status","setState","isOpen","closeSnackBar","handleClose","snackBarContent","onClose","classes","Icon","state","children","vertical","horizontal","propTypes","objectOf","isRequired","defaultProps","SnackBarContextConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Snackbar, IconButton, SnackbarContent } from '@material-ui/core/';\nimport { Close } from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport green from '@material-ui/core/colors/green';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst SnackBarContext = React.createContext('Hello');\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  error: ErrorIcon,\n};\n\nconst styles = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n    fontSize: 20,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'left',\n  },\n});\n\nclass SnackBarProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      message: '',\n      status: '',\n    };\n  }\n\n  openSnackBar = (message, status) => {\n    this.setState({\n      message,\n      status,\n      isOpen: true,\n    });\n  };\n\n  closeSnackBar = () => {\n    this.setState({\n      message: '',\n      status: '',\n      isOpen: false,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ isOpen: false });\n  };\n\n\n  snackBarContent = (onClose, message, status) => {\n    const { classes } = this.props;\n    const Icon = variantIcon[status];\n    return (\n      <SnackbarContent\n        className={classes[status]}\n        message={\n          (\n            <span className={classes.message}>\n              <Icon className={classes.iconVariant} />\n              {message}\n            </span>\n          )\n        }\n        action={[\n          <IconButton\n            color=\"inherit\"\n            onClick={onClose}\n          >\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n      />\n    );\n  }\n\n  render() {\n    const { children, classes } = this.props;\n    const { message, isOpen, status } = this.state;\n\n    return (\n      <>\n        <SnackBarContext.Provider\n          value={{\n            openSnackBar: this.openSnackBar,\n            closeSnackBar: this.closeSnackBar,\n          }}\n        >\n          <Snackbar\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n            open={isOpen}\n            autoHideDuration={6000}\n            onClose={this.handleClose}\n            message={message}\n            action={[\n              <IconButton key=\"close\" color=\"inherit\" className={classes.iconVariant} onClick={this.closeSnackBar}>\n                <Close className={classes.icon} />\n              </IconButton>,\n            ]}\n          >\n            {this.snackBarContent(this.handleClose, message, status)}\n          </Snackbar>\n          {children}\n        </SnackBarContext.Provider>\n      </>\n    );\n  }\n}\nSnackBarProvider.propTypes = {\n  children: PropTypes.objectOf,\n  classes: PropTypes.objectOf.isRequired,\n};\nSnackBarProvider.defaultProps = {\n  children: {},\n};\nexport default withStyles(styles)(SnackBarProvider);\nexport const SnackBarContextConsumer = SnackBarContext.Consumer;"]},"metadata":{},"sourceType":"module"}