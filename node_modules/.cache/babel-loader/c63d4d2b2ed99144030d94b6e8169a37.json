{"ast":null,"code":"import _toConsumableArray from \"/home/trainode26/Projects/chat-server/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/trainode26/Projects/chat-server/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/trainode26/Projects/chat-server/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/trainode26/Projects/chat-server/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/trainode26/Projects/chat-server/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/trainode26/Projects/chat-server/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/trainode26/Projects/chat-server/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/trainode26/Projects/chat-server/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/trainode26/Projects/chat-server/src/pages/components/AvailableUsers.jsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  subscription {\\n    userAdded{\\n      id\\n      name\\n      email\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    getAllUser {\\n      id\\n      name\\n      email\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport { TableComponent, Messanger } from './index';\nvar GET_USERS = gql(_templateObject());\nvar USER_SUBSCRIPTION = gql(_templateObject2());\n\nvar styles = function styles() {\n  return {\n    progress: {\n      color: green[800],\n      position: 'absolute'\n    }\n  };\n};\n\nvar AvailableUsers =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AvailableUsers, _Component);\n\n  function AvailableUsers() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AvailableUsers);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AvailableUsers)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      selectData: {\n        id: '',\n        name: ''\n      }\n    };\n\n    _this.handleSelect = function (id, name) {\n      _this.setState({\n        open: true,\n        selectData: {\n          id: id,\n          name: name\n        }\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.suscribeUser = function (subscribeToMore) {\n      subscribeToMore({\n        document: USER_SUBSCRIPTION,\n        updateQuery: function updateQuery(prev, _ref) {\n          var subscriptionData = _ref.subscriptionData;\n          if (!subscriptionData.data) return prev;\n          var newData = subscriptionData.data;\n          return _objectSpread({}, prev, {\n            getAllUser: [].concat(_toConsumableArray(prev.getAllUser), [newData.userAdded])\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AvailableUsers, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          selectData = _this$state.selectData,\n          open = _this$state.open;\n      return React.createElement(Query, {\n        query: GET_USERS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, function (_ref2) {\n        var _subscribeToMore = _ref2.subscribeToMore,\n            loading = _ref2.loading,\n            error = _ref2.error,\n            data = _ref2.data;\n        if (loading) return React.createElement(CircularProgress, {\n          className: classes.progress,\n          size: 20,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        });\n        if (error) return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, error.message);\n\n        if (open) {\n          return React.createElement(Messanger, {\n            open: open,\n            selectData: selectData,\n            onClose: _this2.handleClose,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          });\n        }\n\n        return React.createElement(TableComponent, {\n          id: \"id\",\n          subscribeToMore: function subscribeToMore() {\n            return _this2.suscribeUser(_subscribeToMore);\n          },\n          data: data,\n          onSelect: _this2.handleSelect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        });\n      });\n    }\n  }]);\n\n  return AvailableUsers;\n}(Component);\n\nAvailableUsers.propTypes = {\n  classes: PropTypes.objectOf.isRequired,\n  open: PropTypes.bool.isRequired\n};\nexport default withStyles(styles)(AvailableUsers);","map":{"version":3,"sources":["/home/trainode26/Projects/chat-server/src/pages/components/AvailableUsers.jsx"],"names":["React","Component","gql","Query","PropTypes","CircularProgress","withStyles","green","TableComponent","Messanger","GET_USERS","USER_SUBSCRIPTION","styles","progress","color","position","AvailableUsers","state","open","selectData","id","name","handleSelect","setState","handleClose","suscribeUser","subscribeToMore","document","updateQuery","prev","subscriptionData","data","newData","getAllUser","userAdded","classes","props","loading","error","message","propTypes","objectOf","isRequired","bool"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,SAASC,cAAT,EAAyBC,SAAzB,QAA2C,SAA3C;AAEA,IAAMC,SAAS,GAAGR,GAAH,mBAAf;AAUA,IAAMS,iBAAiB,GAAGT,GAAH,oBAAvB;;AAUA,IAAMU,MAAM,GAAG,SAATA,MAAS;AAAA,SAAO;AACpBC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,KAAK,EAAEP,KAAK,CAAC,GAAD,CADJ;AAERQ,MAAAA,QAAQ,EAAE;AAFF;AADU,GAAP;AAAA,CAAf;;IAOMC,c;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,KADA;AAENC,MAAAA,UAAU,EAAE;AACVC,QAAAA,EAAE,EAAE,EADM;AAEVC,QAAAA,IAAI,EAAE;AAFI;AAFN,K;;UAQRC,Y,GAAe,UAACF,EAAD,EAAKC,IAAL,EAAc;AAC3B,YAAKE,QAAL,CAAc;AACZL,QAAAA,IAAI,EAAE,IADM;AAEZC,QAAAA,UAAU,EAAE;AACVC,UAAAA,EAAE,EAAFA,EADU;AAEVC,UAAAA,IAAI,EAAJA;AAFU;AAFA,OAAd;AAOD,K;;UAEDG,W,GAAc,YAAM;AAClB,YAAKD,QAAL,CAAc;AACZL,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,K;;UAEDO,Y,GAAe,UAACC,eAAD,EAAqB;AAClCA,MAAAA,eAAe,CAAE;AACfC,QAAAA,QAAQ,EAAEhB,iBADK;AAEfiB,QAAAA,WAAW,EAAE,qBAACC,IAAD,QAAgC;AAAA,cAAvBC,gBAAuB,QAAvBA,gBAAuB;AAC3C,cAAI,CAACA,gBAAgB,CAACC,IAAtB,EAA4B,OAAOF,IAAP;AAC5B,cAAMG,OAAO,GAAGF,gBAAgB,CAACC,IAAjC;AACA,mCACKF,IADL;AAEEI,YAAAA,UAAU,+BAAMJ,IAAI,CAACI,UAAX,IAAuBD,OAAO,CAACE,SAA/B;AAFZ;AAID;AATc,OAAF,CAAf;AAWD,K;;;;;;;6BAEQ;AAAA;;AAAA,UACCC,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAAA,wBAEsB,KAAKlB,KAF3B;AAAA,UAECE,UAFD,eAECA,UAFD;AAAA,UAEaD,IAFb,eAEaA,IAFb;AAGP,aACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAER,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGG,iBAA+C;AAAA,YAA5CgB,gBAA4C,SAA5CA,eAA4C;AAAA,YAA3BW,OAA2B,SAA3BA,OAA2B;AAAA,YAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,YAAXP,IAAW,SAAXA,IAAW;AAC9C,YAAIM,OAAJ,EAAa,OAAO,oBAAC,gBAAD;AAAkB,UAAA,SAAS,EAAEF,OAAO,CAACtB,QAArC;AAA+C,UAAA,IAAI,EAAE,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,YAAIyB,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIA,KAAK,CAACC,OAAV,CAAP;;AACX,YAAIrB,IAAJ,EAAU;AACR,iBACE,oBAAC,SAAD;AACE,YAAA,IAAI,EAAEA,IADR;AAEE,YAAA,UAAU,EAAEC,UAFd;AAGE,YAAA,OAAO,EAAE,MAAI,CAACK,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AACD,eACE,oBAAC,cAAD;AACE,UAAA,EAAE,EAAC,IADL;AAEE,UAAA,eAAe,EAAE;AAAA,mBAAM,MAAI,CAACC,YAAL,CAAkBC,gBAAlB,CAAN;AAAA,WAFnB;AAGE,UAAA,IAAI,EAAEK,IAHR;AAIE,UAAA,QAAQ,EAAE,MAAI,CAACT,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,OAvBH,CADF;AA2BD;;;;EArE0BrB,S;;AAuE7Be,cAAc,CAACwB,SAAf,GAA2B;AACzBL,EAAAA,OAAO,EAAE/B,SAAS,CAACqC,QAAV,CAAmBC,UADH;AAEzBxB,EAAAA,IAAI,EAAEd,SAAS,CAACuC,IAAV,CAAeD;AAFI,CAA3B;AAIA,eAAepC,UAAU,CAACM,MAAD,CAAV,CAAmBI,cAAnB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport { TableComponent, Messanger } from  './index'\n\nconst GET_USERS = gql`\n  {\n    getAllUser {\n      id\n      name\n      email\n    }\n  }\n`;\n\nconst USER_SUBSCRIPTION = gql`\n  subscription {\n    userAdded{\n      id\n      name\n      email\n    }\n  }\n`;\n\nconst styles = () => ({\n  progress: {\n    color: green[800],\n    position: 'absolute',\n  },\n});\n\nclass AvailableUsers extends Component {\n  state = {\n    open: false,\n    selectData: {\n      id: '',\n      name: '',\n    },\n  };\n\n  handleSelect = (id, name) => {\n    this.setState({\n      open: true,\n      selectData: {\n        id,\n        name,\n      }\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ \n      open: false,\n    });\n  }\n\n  suscribeUser = (subscribeToMore) => {\n    subscribeToMore ({\n      document: USER_SUBSCRIPTION,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n        const newData = subscriptionData.data;\n        return {\n          ...prev,\n          getAllUser: [...prev.getAllUser, newData.userAdded]\n        };\n      }\n    });  \n  }\n\n  render() {\n    const { classes } = this.props;\n    const { selectData, open } = this.state;\n    return (\n      <Query\n        query={GET_USERS}\n      >\n        {({ subscribeToMore, loading, error, data }) => {\n          if (loading) return <CircularProgress className={classes.progress} size={20} />;\n          if (error) return <p>{error.message}</p>;\n          if (open) {\n            return (\n              <Messanger \n                open={open}\n                selectData={selectData}\n                onClose={this.handleClose}\n              />\n            )\n          }\n          return (\n            <TableComponent\n              id=\"id\"\n              subscribeToMore={() => this.suscribeUser(subscribeToMore)}\n              data={data}\n              onSelect={this.handleSelect}\n            />\n          )\n        }}\n      </Query>\n    );\n  }\n}\nAvailableUsers.propTypes = {\n  classes: PropTypes.objectOf.isRequired,\n  open: PropTypes.bool.isRequired,\n};\nexport default withStyles(styles)(AvailableUsers);"]},"metadata":{},"sourceType":"module"}